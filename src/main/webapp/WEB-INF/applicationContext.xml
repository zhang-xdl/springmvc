<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 启用注解 -->
    <context:annotation-config/>

    <!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
    <context:component-scan base-package="com.zhangzhaowen.*">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder location="classpath*:*.properties"/>
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!-- Redis 配置 start-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis_max_idle}" />
        <property name="maxWaitMillis" value="${redis_max_wait}" />
        <property name="maxTotal" value="${redis_max_active}" />
        <!--<property name="testOnBorrow" value="${redis_pool_testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${redis_pool_testOnReturn}"/>-->
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis_jost}"/>
        <property name="port" value="${redis_port}"/>
        <property name="poolConfig" ref="jedisPoolConfig" />
        <!--<property name="password" value="${redis_password}"/>-->
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
        <!-- keySerializer 序列化方法-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <!-- Redis 配置 end-->


    <!-- 配置MyBatiss-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 显示指定Mapper文件位置-->
        <property name="mapperLocations" value="classpath*:/mybatis/*Mapper.xml"/>
        <!-- mybatis配置文件位置-->
        <property name="configLocation" value="classpath:/mybatis/config.xml"/>
    </bean>
    <bean id="sqlSsessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <!-- 这个执行器会批量执行更新语句，simple和reuse-->
        <constructor-arg index="1" value="BATCH"/>
    </bean>
    <!-- 扫描basePackage 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 映射接口文件包路径-->
        <property name="basePackage" value="com.zhangzhaowen.dao"/>
    </bean>
    <!-- 使用annotation定义事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- 配置MySQL数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass"><value>${datasource.jdbc.driver}</value></property>
        <property name="jdbcUrl"><value>${datasource.jdbc.database}</value></property>
        <property name="user"><value>${datasource.jdbc.username}</value></property>
        <property name="password"><value>${datasource.jdbc.password}</value></property>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="5"/>
        <property name="maxStatements" value="10"/>
        <property name="idleConnectionTestPeriod" value="3000"/>
        <property name="loginTimeout" value="2000"/>
    </bean>



</beans>











